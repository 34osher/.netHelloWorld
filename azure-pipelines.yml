trigger:
- main

pool:
  name: docker_agent

variables:
  BuildConfiguration: Release
  NuGetPackageOutput: '$(Agent.WorkFolder)/1/a'
  SourceCoode: '$(Agent.WorkFolder)/1/s'

steps:
#- task: DotNetCoreCLI@2
#  displayName: 'Build .NET Core App'
#  inputs:
#    command: 'build'
#    projects: '**/*.csproj'
#    arguments: '--configuration $(BuildConfiguration) --output $(NuGetPackageOutput)'
- script: dotnet build $(SourceCoode)/*.csproj --configuration $(BuildConfiguration) --output $(NuGetPackageOutput)
  displayName: 'Build .NET Core App'

# - task: DotNetCoreCLI@2
#   displayName: 'Run .NET Core App'
#   inputs:
#     command: 'run'
#     projects: '**/*.csproj'
- script: |
    dotnet run --project $(SourceCoode)/*.csproj
  displayName: 'Run .NET Core App'

# - task: NuGetCommand@2
#   displayName: 'Pack to NuGet'
#   inputs:
#     command: 'pack'
#     packagesToPack: '**/*.csproj'
#     versioningScheme: 'off'
#     buildProperties: 'OutputPath=$(Build.ArtifactStagingDirectory)'
#     outputDirectory: '$(NuGetPackageOutput)'
- script: |
    dotnet pack $(SourceCoode)/*.csproj --configuration $(BuildConfiguration) --output $(NuGetPackageOutput)
  displayName: 'Pack to NuGet'

# - task: NuGetCommand@2
#   displayName: 'Push to NuGet Feed'
#   inputs:
#     command: 'push'
#     packagesToPush: '$(NuGetPackageOutput)/**/*.nupkg'
#     nuGetFeedType: 'internal'
#     publishVstsFeed: 'DotnetUbuntu'
- script: |
    dotnet nuget push $(NuGetPackageOutput)/**/*.nupkg --source "DotnetUbuntu" --api-key az
  displayName: 'Push to NuGet Feed'

